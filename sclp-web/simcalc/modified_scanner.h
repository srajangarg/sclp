// Generated by Flexc++ V0.98.00 on Mon, 20 Jan 2014 11:47:30 +0530

#ifndef Scanner_H_INCLUDED_
#define Scanner_H_INCLUDED_

#include <string>

using namespace std;

// $insert baseclass_h
#include "scannerbase.h"
#include "parserbase.h"


// $insert classHead
class Scanner: public ScannerBase
{
    public:
        explicit Scanner(std::istream &in = std::cin,
                                std::ostream &out = std::cout);

        Scanner(std::string const &infile, std::string const &outfile);
        
        // $insert lexFunctionDecl
        int lex();

    private:
 	ParserBase::STYPE__ * dval;

        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts

    public:
	void setSval(ParserBase::STYPE__ * val);
        ParserBase::STYPE__  * getSval();

};

// $insert scannerConstructors
inline Scanner::Scanner(std::istream &in, std::ostream &out)
:
    ScannerBase(in, out)
{}

inline Scanner::Scanner(std::string const &infile, std::string const &outfile)
:
    ScannerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int Scanner::lex()
{
    return lex__();
}

inline void Scanner::preCode() 
{
    // optionally replace by your own code
}

inline void Scanner::print() 
{
    print__();
}



inline void Scanner::setSval(ParserBase::STYPE__ * val)
{
        dval = val;
}

inline ParserBase::STYPE__  * Scanner::getSval()
{
        return dval;
}

#endif // Scanner_H_INCLUDED_
